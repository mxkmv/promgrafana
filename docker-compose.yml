 version: '3.3'

 services:

  prometheus:
     image: prom/prometheus:latest
     user: "root"
     container_name: prometheus
     restart: unless-stopped
     volumes:
       - ./prometheus.yml:/etc/prometheus/prometheus.yml
       - ./prometheus:/etc/prometheus
     command:
       - '--config.file=/etc/prometheus/prometheus.yml'
       - '--storage.tsdb.path=/prometheus'
       - '--storage.tsdb.retention.time=45d'
         # How long to retain samples in prometheus storage.
       - '--web.enable-lifecycle'
         # Enable shutdown and reload via HTTP request.
       -  '--web.enable-admin-api'
         # - '--alertmanager.url=http://alertmanager:9093'
     expose:
       - 9090
     ports:
       - 9090:9090
     networks:
       - monitoring
     links:
       - cadvisor:cadvisor
       - node-exporter:node-exporter

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"' 
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"' 
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - monitoring      

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring
    expose:
      - 8080
  
  grafana:
    image: grafana/grafana:latest
    user: "root"
    container_name: grafana
    restart: unless-stopped
    links:
      - prometheus:prometheus
    expose:
      - 3000      
    ports: 
      - 3000:3000  
    volumes:
      - ./grafana:/var/lib/grafana
    networks:
      - monitoring
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}  
      - GF_USERS_ALLOW_SIGN_UP=false
  
  node-red:
    image: nodered/node-red
    container_name: node-red
    user: "1000"
    environment:
      - TZ=Europe/Moscow
    ports:
      - "11880:1880"
    volumes:
      - "./node-red:/data"
    networks:
      - monitoring
    restart: always
    links:
      - prometheus:prometheus
  
 networks:
     monitoring:
       driver: bridge

 volumes:
     prometheus: {}
     grafana: {}
     node-red: {}
